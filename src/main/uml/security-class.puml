@startuml

interface UserDetails  {
  String getUsername();
  String getPassword();
  Collection getAuthorities();
  boolean isEnabled();
}

interface GrantedAuthority{
   String getAuthority()
}
class DomainAccount {
   Long id;
   String name;
   String password;
}
class CurrentUserDetails {
   DomainAccount account;
}
UserDetails "1" -right-> "*" GrantedAuthority: authorities and roles
CurrentUserDetails -up-|> UserDetails
CurrentUserDetails .right.> DomainAccount

interface Principal {
  String getName();
}
interface Authentication {
  Object getDetails();
  Object getCredentials();
  Object getPrincipal();
  boolean isAuthenticated();
}
Authentication -up-|> Principal
Authentication --> UserDetails

interface AuthenticationProvider {
   Authentication authenticate(Authentication authentication)
}
interface AuthenticationManager {
   authenticate(Authentication authentication)
}

interface UserDetailsService <<DAO>> {
   UserDetails loadUserByUsername(String username)
}

AuthenticationManager "1" --> "*" AuthenticationProvider
AuthenticationManager ..> UserDetailsService: find user details by nick
AuthenticationManager -> Authentication

class SecurityContextHolder {
   static SecurityContext getContext();
   static void clearContext()
}
interface SecurityContext {
   Authentication getAuthentication();
}
SecurityContextHolder -down-> SecurityContext
SecurityContext -right-> Authentication: hold


@enduml